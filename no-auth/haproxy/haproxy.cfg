global
  stats socket /var/run/api.sock user haproxy group haproxy mode 660 level admin expose-fd listeners
  log stdout format raw local0 info
    lua-load /etc/haproxy/cors.lua

defaults
  mode http
  timeout client 10s
  timeout connect 5s
  timeout server 10s
  timeout http-request 10s
  log global

frontend stats
  bind *:8404
  stats enable
  stats uri /
  stats refresh 10s

frontend api_gateway
    bind :80

    # Permit CORS from frontend site (localhost:3000)-> backend services (this api gateway)
    http-request capture req.hdr(Origin) len 20
    http-request lua.cors "GET,PUT,POST" "localhost:3000/*" "*"
    http-response lua.cors

    use_backend be_file_converter if { path /file-converter } || { path_beg /file-converter/ }
    use_backend be_catalog if { path /catalog } || { path_beg /catalog/ }
#    use_backend be_ml_ui if { path /ml } || { path_beg /ml/ }

    default_backend no-match

backend no-match
    mode http
    http-request deny deny_status 400

backend be_file_converter
    http-request replace-path /file-converter(/)?(.*) /\2
    server s1 ssm-service-file-converter:8000

backend be_catalog
    http-request replace-path /catalog(/)?(.*) /\2
    server s2 ssm-service-catalog:8080

#backend be_ml_ui
#    http-request replace-path /ml(/)?(.*) /\2
#    server s3 ssm-ui-ml:8080
